// stylelint-disable selector-no-qualifying-type

//
// Textual form controls
//

.form-control {
  border-top: none;
  border-right: none;
  border-left: none;

  &:hover {
    color: $input-hover-color;
    border-color: $input-hover-border-color;

    // Avoid using mixin so we can pass custom focus shadow properly
    @if $enable-shadows {
      box-shadow: $input-box-shadow, $input-hover-box-shadow;
    } @else {
      box-shadow: $input-hover-box-shadow;
    }
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();
}

textarea.form-control {
  line-height: 1.45;
}


// Select
//
// Replaces the browser default select with a custom one, mostly pulled from
// https://primer.github.io/.
//

select.form-control {
  display: inline-block;
  width: 100%;
  height: $custom-select-height;
  padding: $custom-select-padding-y ($custom-select-padding-x + $custom-select-indicator-padding) $custom-select-padding-y $custom-select-padding-x;
  line-height: $custom-select-line-height;
  color: $custom-select-color;
  vertical-align: middle;
  background: $custom-select-bg $custom-select-indicator no-repeat right $custom-select-padding-x center;
  background-size: $custom-select-bg-size;
  border: $custom-select-border-width solid $custom-select-border-color;
  border-top: none;
  border-right: none;
  border-left: none;

  @if $enable-rounded {
    border-radius: $custom-select-border-radius;
  } @else {
    border-radius: 0;
  }
  appearance: none;

  &:focus {
    border-color: $custom-select-focus-border-color;
    outline: 0;
    box-shadow: $custom-select-focus-box-shadow;

    &::-ms-value {
      // For visual consistency with other platforms/browsers,
      // suppress the default white text on blue background highlight given to
      // the selected option text when the (still closed) <select> receives focus
      // in IE and (under certain conditions) Edge.
      // See https://github.com/twbs/bootstrap/issues/19398.
      color: $input-color;
      background-color: $input-bg;
    }
  }

  &[multiple],
  &[size]:not([size="1"]) {
    height: auto;
    padding-right: $custom-select-padding-x;
    background-image: none;
  }

  &:disabled {
    color: $custom-select-disabled-color;
    background-color: $custom-select-disabled-bg;
  }

  // Hides the default caret in IE11
  &::-ms-expand {
    opacity: 0;
  }
}


// Range
//
// Style range inputs the same across browsers. Vendor-specific rules for pseudo
// elements cannot be mixed. As such, there are no shared styles for focus or
// active states on prefixed selectors.

.form-control-range {
  padding-left: 0; // Firefox specific
  margin: .625rem 0 1.5rem 0;
  background-color: transparent;
  appearance: none;

  &:focus {
    outline: none;
  }

  &::-moz-focus-outer {
    border: 0;
  }

  &::-webkit-slider-thumb {
    width: $custom-range-thumb-width;
    height: $custom-range-thumb-height;
    margin-top: -($custom-range-thumb-width * .25); // Webkit specific?
    @include gradient-bg($custom-range-thumb-bg);
    border: $custom-range-thumb-border;
    @include border-radius($custom-range-thumb-border-radius);
    @include box-shadow($custom-range-thumb-box-shadow);
    appearance: none;

    &:focus {
      outline: none;
      box-shadow: $custom-range-thumb-focus-box-shadow; // No mixin for focus accessibility
    }

    &:active {
      @include gradient-bg($custom-range-thumb-active-bg);
    }
  }

  &::-webkit-slider-runnable-track {
    width: $custom-range-track-width;
    height: $custom-range-track-height;
    color: transparent; // Why?
    cursor: $custom-range-track-cursor;
    background-color: $custom-range-track-bg;
    border-color: transparent;
    @include border-radius($custom-range-track-border-radius);
    @include box-shadow($custom-range-track-box-shadow);
  }

  &::-moz-range-thumb {
    width: $custom-range-thumb-width;
    height: $custom-range-thumb-height;
    @include gradient-bg($custom-range-thumb-bg);
    border: $custom-range-thumb-border;
    @include border-radius($custom-range-thumb-border-radius);
    @include box-shadow($custom-range-thumb-box-shadow);
    appearance: none;

    &:focus {
      outline: none;
      box-shadow: $custom-range-thumb-focus-box-shadow; // No mixin for focus accessibility
    }

    &:active {
      @include gradient-bg($custom-range-thumb-active-bg);
    }
  }

  &::-moz-range-track {
    width: $custom-range-track-width;
    height: $custom-range-track-height;
    color: transparent;
    cursor: $custom-range-track-cursor;
    background-color: $custom-range-track-bg;
    border-color: transparent; // Firefox specific?
    @include border-radius($custom-range-track-border-radius);
    @include box-shadow($custom-range-track-box-shadow);
  }

  &::-ms-thumb {
    width: $custom-range-thumb-width;
    height: $custom-range-thumb-height;
    @include gradient-bg($custom-range-thumb-bg);
    border: $custom-range-thumb-border;
    @include border-radius($custom-range-thumb-border-radius);
    @include box-shadow($custom-range-thumb-box-shadow);
    appearance: none;

    &:focus {
      outline: none;
      box-shadow: $custom-range-thumb-focus-box-shadow; // No mixin for focus accessibility
    }

    &:active {
      @include gradient-bg($custom-range-thumb-active-bg);
    }
  }

  &::-ms-track {
    width: $custom-range-track-width;
    height: $custom-range-track-height;
    color: transparent;
    cursor: $custom-range-track-cursor;
    background-color: transparent;
    border-color: transparent;
    border-width: ($custom-range-thumb-height * .5);
    @include box-shadow($custom-range-track-box-shadow);
  }

  &::-ms-fill-lower {
    background-color: $custom-range-track-bg;
    @include border-radius($custom-range-track-border-radius);
  }

  &::-ms-fill-upper {
    margin-right: 15px; // arbitrary?
    background-color: $custom-range-track-bg;
    @include border-radius($custom-range-track-border-radius);
  }

  & + .form-control-range-steps {
    display: flex;
    justify-content: space-between;
    padding: 0 7px;
    margin-top: -16px;

    span {
      position: relative;
      display: flex;
      justify-content: center;
      width: 1px;
      height: .75rem;
      margin: 0 0 1.25rem 0;
      line-height: 2.875rem;
      text-align: center;
      background: $gray-300;
    }
  }
}

// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.form-check {
  padding-top: .25rem;
  padding-bottom: .25rem;

  .form-check-label {
    position: relative;
    margin-bottom: 0;

    // Background-color and (when enabled) gradient
    &::before {
      position: absolute;
      top: (($line-height-base - $custom-control-indicator-size) / 2);
      left: -$custom-control-gutter;
      display: block;
      width: $custom-control-indicator-size;
      height: $custom-control-indicator-size;
      pointer-events: none;
      content: "";
      user-select: none;
      background-color: $custom-control-indicator-bg;
      @include box-shadow($custom-control-indicator-box-shadow);
      @include border-radius($custom-checkbox-indicator-border-radius);
      border: 1px solid $custom-checkbox-indicator-deafult-color;
    }

    // Foreground (icon)
    &::after {
      position: absolute;
      top: (($line-height-base - $custom-control-indicator-size) / 2);
      left: -$custom-control-gutter;
      display: block;
      width: $custom-control-indicator-size;
      height: $custom-control-indicator-size;
      content: "";
      background-image: $custom-checkbox-indicator-icon-default;
      background-repeat: no-repeat;
      background-position: center center;
      background-size: $custom-checkbox-indicator-bg-size;
    }
  }

  .form-check-input:checked ~ .form-check-label {
    &::before {
      @include gradient-bg($custom-control-indicator-checked-bg);
    }
    &::after {
      background-image: $custom-checkbox-indicator-icon-checked;
    }
  }

  .form-check-input:indeterminate ~ .form-check-label {
    &::before {
      border-color: $secondary;
      // @include gradient-bg($custom-checkbox-indicator-indeterminate-bg);
      // @include box-shadow($custom-checkbox-indicator-indeterminate-box-shadow);
    }
    &::after {
      background-image: $custom-checkbox-indicator-icon-indeterminate;
    }
  }

  .form-check-input:disabled {
    &:checked ~ .form-check-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
    &:indeterminate ~ .form-check-label::before {
      background-color: $custom-control-indicator-checked-disabled-bg;
    }
  }
}

.form-check-input {
  position: absolute;
  z-index: -1; // Put the input behind the label so it doesn't overlay text
  margin-left: -($form-check-input-gutter - 1.25);
  opacity: 0;

  &:checked ~ .form-check-label{
    color: $custom-control-indicator-active-color;

    &::before {
      color: $custom-control-indicator-checked-color;
      border-color: $custom-control-indicator-active-color;
      @include gradient-bg($custom-control-indicator-checked-bg);
      @include box-shadow($custom-control-indicator-checked-box-shadow);
    }
  }

  // &:focus ~ .form-check-label::before {
  //   // the mixin is not used here to make sure there is feedback
  //   box-shadow: $custom-control-indicator-focus-box-shadow;
  // }

  &:active ~ .form-check-label::before {
    color: $custom-control-indicator-active-color;
    background-color: $custom-control-indicator-active-bg;
    border-color: $custom-control-indicator-active-color;
    @include box-shadow($custom-control-indicator-active-box-shadow);
  }

  &:disabled {
    ~ .form-check-label {
      color: $custom-control-label-disabled-color;

      &::before {
        border-color: $custom-control-indicator-disabled-bg;
      }

      &::after {
        background-image: $custom-checkbox-indicator-icon-disabled;
      }
    }
  }
}

.form-check-inline {
  .form-check-input {
    margin-top: -2px;
  }
}
